plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.izycorp'
version '1.0.3'
archivesBaseName = "cod_java_api-" + (project.hasProperty('version') ? "-${version}" : "")

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
}

tasks.register('sourcesJar', Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    classifier 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            artifact tasks.javadocJar

            pom {
                groupId = project.group
                version = project.version
                artifactId = 'codapi'
                name = project.name
                description = 'An unofficial wrapper of the official Call Of Duty API'
                url = 'https://github.com/iZyCorp/Call-of-Duty-Java-API'

                scm {
                    connection = 'scm:git:git://github.com/iZyCorp/Call-of-Duty-Java-API.git'
                    developerConnection = 'scm:git:ssh://github.com:iZyCorp/Call-of-Duty-Java-API.git'
                    url = 'https://github.com/iZyCorp/Call-of-Duty-Java-API/tree/master'
                }

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'izycorp'
                        name = 'iZyy_'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = project.findProperty("OSSRH_USERNAME")
                password = project.findProperty("OSSRH_PASSWORD")
            }
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    sign configurations.archives
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    api ('com.squareup.okhttp3:okhttp:4.11.0')
    api ('org.json:json:20230227')
}

test {
    useJUnitPlatform()
}